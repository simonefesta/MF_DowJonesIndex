geom_text(aes(label=round(ACMV_value,3), colour="y4_txt"), hjust=-0.2, vjust=-0.7, na.rm = TRUE) +
ggtitle(title_content) +
labs(subtitle=subtitle_content, caption=caption_content) +
xlab("time") +
scale_y_continuous(name=y_name, breaks=y_breaks, labels=NULL, limits=y_lims,
sec.axis = sec_axis(~., breaks=y_breaks, labels=y_labs)) +
scale_colour_manual(name="Legend", labels=leg_labs, values=leg_vals, breaks=leg_sort) +
theme(plot.title=element_text(hjust=0.5), plot.subtitle=element_text(hjust=0.5),
axis.text.x = element_text(angle=0, vjust=1),
legend.key.width = unit(0.80,"cm"), legend.position="bottom")
plot(S_ACP_AC_EP_ACMV_lattice_sp)
df <- ACP_mod_rsh_df[1:20, c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")]
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.2, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = +0.1, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = AC_EP_value), nudge_x = -0.2, nudge_y = -0.2, color = "red") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
theme_minimal()
# Stampa il grafico
print(grafico)
# Stampa le informazioni sul dataframe
cat("Informazioni sul dataframe:\n")
print(summary(df))
df <- ACP_mod_rsh_df[1:20, c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")]
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.2, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.2, color = "red") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
theme_minimal()
# Stampa il grafico
print(grafico)
# Stampa le informazioni sul dataframe
cat("Informazioni sul dataframe:\n")
print(summary(df))
df <- ACP_mod_rsh_df[1:20, c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")]
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.2, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.2, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
theme_minimal()
# Stampa il grafico
print(grafico)
# Stampa le informazioni sul dataframe
cat("Informazioni sul dataframe:\n")
print(summary(df))
print(ACP_mod_rsh_df[1:20,])
df <- ACP_mod_rsh_df[1:20, c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")]
print(df)
print(ACP_mod_rsh_df[1:20,])
max_index <- max(df$Index)
df <- ACP_mod_rsh_df[1:20, c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")]
print(df)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.2, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.2, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Stampa le informazioni sul dataframe
cat("Informazioni sul dataframe:\n")
print(summary(df))
df <-ACP_mod_rsh_df[1:20,]
colnames(df) <- c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")
print(df)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.2, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.2, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Stampa le informazioni sul dataframe
cat("Informazioni sul dataframe:\n")
print(summary(df))
df <-ACP_mod_rsh_df[1:20,]
colnames(df) <- c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")
print(df)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.2, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.2, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Stampa le informazioni sul dataframe
cat("Informazioni sul dataframe:\n")
print(summary(df))
df <-ACP_mod_rsh_df[1:20,]
colnames(df) <- c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")
print(df)
max_index <- max(df$Index)
df <-ACP_mod_rsh_df
colnames(df) <- c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")
print(df)
max_index <- max(df$Index)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.2, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.2, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Stampa le informazioni sul dataframe
cat("Informazioni sul dataframe:\n")
print(summary(df))
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.2, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.2, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
df <-ACP_mod_rsh_df
print(df)
colnames(df) <- c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")
print(df)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.2, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.2, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Stampa le informazioni sul dataframe
cat("Informazioni sul dataframe:\n")
print(summary(df))
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.2, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.2, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.2, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.2, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.25, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.25, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.2, nudge_y = -0.25, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.2, nudge_y = +0.25, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.25, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.25, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.1, nudge_y = -0.25, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.1, nudge_y = +0.25, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Stampa le informazioni sul dataframe
cat("Informazioni sul dataframe:\n")
print(summary(df))
df <-ACP_mod_rsh_df
colnames(df) <- c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")
print(df)
max_index <- max(df$Index)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.25, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.25, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.1, nudge_y = -0.25, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.1, nudge_y = +0.25, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.25, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.25, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.1, nudge_y = -0.25, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.1, nudge_y = +0.25, color = "magenta") +
panel.points(index_real_evolution$x, index_real_evolution$y, col = "green", pch = 16)
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.25, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.25, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.1, nudge_y = -0.25, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.1, nudge_y = +0.25, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Aggiungi i punti del dataframe index_real_evolution al grafico esistente
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3)
# Stampa il grafico con i nuovi punti
print(grafico_con_nuovi_punti)
# Stampa le informazioni sul dataframe df
cat("Informazioni sul dataframe df:\n")
print(summary(df))
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.25, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.25, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.1, nudge_y = -0.25, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.1, nudge_y = +0.25, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Aggiungi i punti del dataframe index_real_evolution al grafico esistente
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "green", size = 2)
# Stampa il grafico con i nuovi punti
print(grafico_con_nuovi_punti)
# Stampa le informazioni sul dataframe df
cat("Informazioni sul dataframe df:\n")
print(summary(df))
print(index_real_evolution)
print(index_real_evolution)
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - first(y))
print(df)
print(index_real_evolution)
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
# Aggiungi i punti del dataframe index_real_evolution al grafico esistente
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "green", size = 2)
# Stampa il grafico con i nuovi punti
print(grafico_con_nuovi_punti)
df <-ACP_mod_rsh_df
df <- na.omit(df)
colnames(df) <- c("Index", "S_value", "ACP_value", "AC_EP_value", "ACMV_value")
print(df)
max_index <- max(df$Index)
# Creazione del grafico con etichette dei valori delle colonne "ACP_value", "AC_EP_value" e "ACMV_value"
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.25, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.25, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.1, nudge_y = -0.25, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.1, nudge_y = +0.25, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
# Aggiungi i punti del dataframe index_real_evolution al grafico esistente
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "green", size = 2)
# Stampa il grafico con i nuovi punti
print(grafico_con_nuovi_punti)
# Stampa le informazioni sul dataframe df
cat("Informazioni sul dataframe df:\n")
print(summary(df))
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
# Aggiungi i punti del dataframe index_real_evolution al grafico esistente
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "green", size = 2)
# Stampa il grafico con i nuovi punti
print(grafico_con_nuovi_punti)
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.25, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.25, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.1, nudge_y = -0.25, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.1, nudge_y = +0.25, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
# Aggiungi i punti del dataframe index_real_evolution al grafico esistente
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "green", size = 2)+
geom_text(aes(label = Payoff), nudge_x = -0.1, nudge_y = +0.25, color = "green") +
# Stampa il grafico con i nuovi punti
print(grafico_con_nuovi_punti)
grafico <- ggplot(df, aes(x = Index, y = S_value)) +
geom_point() +
geom_text(aes(label = S_value), nudge_x = -0.1, nudge_y = +0.25, color = "black") +
geom_text(aes(label = ACP_value), nudge_x = -0.1, nudge_y = -0.25, color = "red") +
geom_text(aes(label = AC_EP_value), nudge_x = +0.1, nudge_y = -0.25, color = "blue") +
geom_text(aes(label = ACMV_value), nudge_x = +0.1, nudge_y = +0.25, color = "magenta") +
labs(title = "Grafico in funzione di Index e S_value", x = "Index", y = "S_value") +
# scale_x_continuous(limits = c(0, max_index)) +  # Imposta i limiti dell'asse x
theme_minimal()
# Stampa il grafico
print(grafico)
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
# Aggiungi i punti del dataframe index_real_evolution al grafico esistente
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "green", size = 2)+
geom_text(aes(label = Payoff), nudge_x = -0.1, nudge_y = +0.25, color = "green") +
# Stampa il grafico con i nuovi punti
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = nuovi_punti, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = nuovi_punti, aes(x = x, y = y, label = Payoff), vjust = -1)
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
# Aggiungi i punti del dataframe index_real_evolution al grafico esistente
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = Payoff), vjust = -1)
# Stampa il grafico con i nuovi punti
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = Payoff), vjust = -1)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
# Stampa le informazioni sul dataframe df
cat("Informazioni sul dataframe df:\n")
print(summary(df))
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = Payoff, color = "orange"), vjust = -1)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
print(index_real_evolution)
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = celiling(Payoff), color = "orange"), vjust = -1)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = ceiling(Payoff), color = "orange"), vjust = -1)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff), color = "orange"), vjust = -1)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff), color = "orange"), vjust = -1)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "orange"), vjust = -1)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "orange"), vjust = -4)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "orange"), vjust = +2)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "red"), vjust = +2)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "orange", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "red"), vjust = +2)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "red", size = 3) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "red"), vjust = +2)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "red", size = 2) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "red"), vjust = +2)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
# Grafico degli strike in funzione di lastCallPrice di un dataset (only traded)#######
# Questa serie di comandi mi permettono di avere sul grafico gli Strike di riferimento che osservo.
strike_clean_read <- read.csv(file)
strike_clean_total <- strike_clean_read$Strike
# Trova il numero totale di colonne nel dataframe "clean_strike_frame"
num_colonne <- ncol(clean_strike_frame)
# Estrai la colonna "LastPr" dal dataframe "clean_strike_frame" (considerando l'ultima colonna)
ultima_colonna <- clean_strike_frame[, num_colonne]
# Filtra le colonne "Strike" in base alla presenza dell'elemento "LastPr" nel vettore "clean_strike_frame_strikes"
strike_legend <- strike_clean_total[strike_clean_read$Call_LastPr %in% clean_strike_frame[, num_colonne]]
plot(1, 1, type = "n", xlim = c(0,ncol(clean_strike_frame)), ylim = c(min(clean_strike_frame), max(clean_strike_frame)),
xlab = "Giorni dall'osservazione iniziale", ylab = "LastCallPrice",
main = "Evoluzione del lastCallPrice in funzione dei soli strike variati")
# Aggiunta delle linee per ogni riga del dataframe
for (i in 1:nrow(clean_strike_frame)) {
lines(0:(ncol(clean_strike_frame)-1), clean_strike_frame[i,], col = i)
}
legend("topright", legend = strike_legend, col = 1:length(strike_legend), lty = 1, pch = 10, title = "Strikes associated")
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "red", size = 2) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "red"), vjust = +2)
legend("topright", legend = index_real_evolution, col = 1:length(index_real_evolution), lty = 1, pch = 10, title = "Strikes associated")
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "red", size = 2) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "red"), vjust = +2)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "red", size = 2) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "red"), vjust = +2)
scale_color_manual(values = c("Nuovi Punti" = "orange"), name = "Descrizione Colori")
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
print(index_real_evolution)
index_real_evolution <- index_real_evolution %>%
mutate(Payoff = y - K)
print(index_real_evolution)
grafico_con_nuovi_punti <- grafico +
geom_point(data = index_real_evolution, aes(x = x, y = y), color = "red", size = 2) +
geom_text(data = index_real_evolution, aes(x = x, y = y, label = round(Payoff,3), color = "red"), vjust = +2)
# Stampa il grafico con i nuovi punti e le etichette "Payoff"
print(grafico_con_nuovi_punti)
